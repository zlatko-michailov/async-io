apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven-publish'


// ---------------------------------------------------------------------
// Compilation
// ---------------------------------------------------------------------
repositories {
   mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'


// ---------------------------------------------------------------------
// Packaging
// ---------------------------------------------------------------------
def specTitle     = 'Async I/O'
def specVersion   = '0.2'
def specVendor    = 'Zlatko Michailov <zlatko+async@michailov.org>'
def implShortName = 'org.michailov.async.io'
def implTitle     = 'Async I/O'
def implVersion   = '0.2'
def implVendor    = 'Zlatko Michailov <zlatko+async@michailov.org>'
def projectGroup  = 'michailov'
def javaVersion   = '1.8'

group               = projectGroup
version             = implVersion
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

jar {
    manifest {
        attributes('Specification-Title':    specTitle,
                   'Specification-Version':  specVersion,
                   'Specification-Vendor':   specVendor,
                   'Implementation-Title':   implTitle, 
                   'Implementation-Version': implVersion,
                   'Implementation-Vendor':  implVendor)
    }
}


// ---------------------------------------------------------------------
// Testing
// ---------------------------------------------------------------------
test {
    afterTest { descriptor, result ->
        def testName = descriptor.getClassName() + " : " + descriptor.getName();
        if (result.getFailedTestCount() == 0) {
            logger.lifecycle("[ Passed ] " + testName);
        }
        else {
            logger.lifecycle("[=FAILED=] " + testName);
        }
    }
}


// ---------------------------------------------------------------------
// Publishing
// ---------------------------------------------------------------------
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    
    repositories {
        maven {
            url "$buildDir/publish/maven"
        }
    }
}


